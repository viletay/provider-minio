apiVersion: s3.minio.upbound.io/v1alpha1
kind: BucketReplication
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_b
  name: replication-in-b
spec:
  forProvider:
    bucketSelector:
      matchLabels:
        testing.upbound.io/example-name: my_bucket_in_a
    rule:
    - deleteMarkerReplication: true
      deleteReplication: true
      existingObjectReplication: true
      metadataSync: true
      target:
      - accessKey: ${minio_iam_service_account.replication_in_b.access_key}
        bandwidthLimt: 100M
        bucket: state-terraform-s3
        host: ${var.minio_server_b}
        secretKeySecretRef:
          key: attribute.secret_key
          name: example-iam-service-account
          namespace: upbound-system
        secure: false

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_a
  name: replication-in-a
spec:
  forProvider:
    name: ReplicationToMyBucketPolicy
    policy: ${data.minio_iam_policy_document.replication_policy.json}

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: Policy
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_b
  name: replication-in-b
spec:
  forProvider:
    name: ReplicationToMyBucketPolicy
    policy: ${data.minio_iam_policy_document.replication_policy.json}
    provider: ${minio.deployment_b}

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: ServiceAccount
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_a
  name: replication-in-a
spec:
  forProvider:
    targetUser: my-user

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: ServiceAccount
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_b
  name: replication-in-b
spec:
  forProvider:
    provider: ${minio.deployment_b}
    targetUser: my-user

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: User
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_a
  name: replication-in-a
spec:
  forProvider:
    forceDestroy: true
    name: my-user

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: User
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_b
  name: replication-in-b
spec:
  forProvider:
    forceDestroy: true
    name: my-user
    provider: ${minio.deployment_b}

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: UserPolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_a
  name: replication-in-a
spec:
  forProvider:
    policyNameSelector:
      matchLabels:
        testing.upbound.io/example-name: replication_in_a
    userNameSelector:
      matchLabels:
        testing.upbound.io/example-name: replication_in_a

---

apiVersion: iam.minio.upbound.io/v1alpha1
kind: UserPolicyAttachment
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: replication_in_b
  name: replication-in-b
spec:
  forProvider:
    policyNameSelector:
      matchLabels:
        testing.upbound.io/example-name: replication_in_b
    provider: ${minio.deployment_b}
    userNameSelector:
      matchLabels:
        testing.upbound.io/example-name: replication_in_b

---

apiVersion: s3.minio.upbound.io/v1alpha1
kind: Bucket
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: my_bucket_in_a
  name: my-bucket-in-a
spec:
  forProvider:
    bucket: my-bucket

---

apiVersion: s3.minio.upbound.io/v1alpha1
kind: Bucket
metadata:
  annotations:
    meta.upbound.io/example-id: s3/v1alpha1/bucketreplication
  labels:
    testing.upbound.io/example-name: my_bucket_in_b
  name: my-bucket-in-b
spec:
  forProvider:
    bucket: my-bucket
    provider: ${minio.deployment_b}
